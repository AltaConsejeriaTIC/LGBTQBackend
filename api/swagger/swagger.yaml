swagger: "2.0"
info:
  version: "0.0.1"
  title: Hello World App
# during dev, should point to your local machine
host: localhost:8080
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /login:
    # binds a127 app logic to a route
    x-swagger-router-controller: login
    post:
      tags:
        - "Login"
      description: Allows the user to log in
      # used as the method name of the controller
      operationId: login
      parameters:
        - in: body
          name: loginForm
          description: login form
          required: true
          schema: 
            $ref: "#/definitions/loginForm"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/LoginObjectResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /events:
    x-swagger-router-controller: event
    get:
      description: get the events list
      operationId: getEvents
      tags:
        - "events"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/EventListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: add a new event to the list
      operationId: postEvent
      tags:
        - "events"
      parameters:
        - in: header
          name: token
          description: event token
          type: string
          required: true
        - in: body
          name: event
          description: The event to create.
          schema:
            $ref: "#/definitions/Event"
      responses:
        "201":
          description: Success
          schema:
            $ref: "#/definitions/GeneralObjectResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /allevents:
    x-swagger-router-controller: event
    get:
      description: get the events list
      operationId: getAllEvents
      tags:
        - "events"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/EventListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /events/{id}:
    x-swagger-router-controller: event
    get:
      description: get a event
      operationId: getEvent
      parameters: 
      - name: id
        type: number
        in: path
        required: true
      responses:
        "200":
          description: Success
          schema: 
           $ref: "#/definitions/GeneralObjectResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: update a event
      operationId: updateEvent
      # define the parameters
      tags:
        - "update Event"
      parameters:
        - name: id
          description: event id
          type: number
          in: path
          required: true
        - in: header
          name: token
          description: event token
          type: string
          required: true
        - in: body
          name: event
          description: The event to update.
          schema:
            $ref: "#/definitions/Event"
      responses:
        "201":
          description: Success
          schema:
            $ref: "#/definitions/GeneralObjectResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      description: delete a event
      # define the parameters
      parameters:
        - name: id
          description: event id
          type: number
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralDeleteResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /updateEvenState/{id}:
    x-swagger-router-controller: event
    put:
      tags:
        - "update Event"
      description: Update state of the event
      operationId: updateStateEvent
      parameters:
        - name: id 
          description: event id 
          type: string
          in: path
          required: true
        - in: header
          name: token
          description: event token
          type: string
          required: true
        - in: body 
          name: state
          schema:
            $ref: "#/definitions/State"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralObjectResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /news:
    x-swagger-router-controller: news
    get:
      tags:
        - "get news"
      description: get the news list
      operationId: getNews
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/NewsListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      tags:
        - "news post"
      description: add a news to the list
      operationId: postNews
      parameters:
        - in: header
          name: token
          description: event token
          type: string
          required: true
        - in: body
          name: news
          description: News to create.
          schema:
            $ref: "#/definitions/News"
      responses:
        "201":
          description: Success
          schema:
            $ref: "#/definitions/GeneralObjectResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /allnews:
    x-swagger-router-controller: news
    get:
      description: get all news list
      operationId: getAllNews
      tags:
        - "get news"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/NewsListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /news/{id}:
    x-swagger-router-controller: news
    get:
      description: get a news
      operationId: getNewsId
      parameters: 
      - name: id
        type: number
        in: path
        required: true
      responses:
        "200":
          description: Success
          schema: 
           $ref: "#/definitions/GeneralObjectResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: update a news
      # define the parameters
      operationId: updateNews
      tags:
        - "update News"
      parameters:
        - name: id
          description: news id
          type: number
          in: path
          required: true
        - in: header
          name: token
          description: event token
          type: string
          required: true
        - in: body
          name: news
          description: The news to update.
          schema:
            $ref: "#/definitions/News"
      responses:
        "201":
          description: Success
          schema:
            $ref: "#/definitions/GeneralObjectResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"  
    delete:
      description: delete a news
      operationId: deleteNewsId
      tags:
        - "delete News"
      # define the parameters
      parameters:
        - name: id
          description: news id
          type: number
          in: path
          required: true
        - in: header
          name: token
          description: event token
          type: string
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralDeleteResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /updateNewsState/{id}:
    x-swagger-router-controller: news
    put:
      tags:
        - "update News"
      description: Update state of news
      operationId: updateStateNews
      parameters:
        - name: id 
          description: news id 
          type: string
          in: path
          required: true
        - in: header
          name: token
          description: news token
          type: string
          required: true
        - in: body 
          name: state
          schema:
            $ref: "#/definitions/State"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralObjectResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /organizations:
    x-swagger-router-controller: organization
    get:
      description: get the organizations list
      operationId: getOrganizations
      tags:
        - "organizations"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/OrganizationsListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: add a new organization to the list
      operationId: postOrganization
      tags:
        - "organizations"
      parameters:
        - in: header
          name: token
          description: event token
          type: string
          required: true
        - in: body
          name: organization
          description: The organization to create.
          schema:
            $ref: "#/definitions/Organization"
      responses:
        "201":
          description: Success
          schema:
            $ref: "#/definitions/GeneralObjectResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /organizations/{id}:
    x-swagger-router-controller: organization
    get:
      description: get an organization
      operationId: getOrganization
      tags:
        - "organizations"
      parameters: 
      - name: id
        type: number
        in: path
        required: true
      responses:
        "200":
          description: Success
          schema: 
           $ref: "#/definitions/GeneralObjectResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: update an organization
      operationId: updateOrganization
      tags:
        - "organizations"
      parameters:
        - name: id
          description: organization id
          type: number
          in: path
          required: true
        - in: header
          name: token
          description: event token
          type: string
          required: true
        - in: body
          name: organization
          description: The organization to update.
          schema:
            $ref: "#/definitions/Organization"
      responses:
        "201":
          description: Success
          schema:
            $ref: "#/definitions/GeneralObjectResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /updateOrganizationState/{id}:
    x-swagger-router-controller: organization
    put:
      tags:
        - "organizations"
      description: Update state of organization
      operationId: updateStateOrganization
      parameters:
        - name: id 
          description: organization id 
          type: string
          in: path
          required: true
        - in: header
          name: token
          description: organization token
          type: string
          required: true
        - in: body 
          name: state
          schema:
            $ref: "#/definitions/State"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralObjectResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /alliances:
    x-swagger-router-controller: alliance
    get:
      description: get the alliances list
      operationId: getAlliances
      tags:
        - "get alliances"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/AlliancesListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: add a new alliance to the list
      operationId: postAlliance
      tags:
        - "post alliances"
      parameters:
        - in: header
          name: token
          description: event token
          type: string
          required: true
        - in: body
          name: alliance
          description: The alliance to create.
          schema:
            $ref: "#/definitions/Alliance"
      responses:
        "201":
          description: Success
          schema:
            $ref: "#/definitions/GeneralObjectResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /alliance/{id}:
    x-swagger-router-controller: alliance
    get:
      description: get an alliance
      operationId: getAlliance
      parameters: 
      - name: id
        type: number
        in: path
        required: true
      responses:
        "200":
          description: Success
          schema: 
           $ref: "#/definitions/GeneralObjectResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: update an alliance
      operationId: updateAlliance
      # define the parameters
      tags:
        - "update Alliance"
      parameters:
        - name: id
          description: alliance id
          type: number
          in: path
          required: true
        - in: header
          name: token
          description: event token
          type: string
          required: true
        - in: body
          name: alliance
          description: The alliance to update.
          schema:
            $ref: "#/definitions/Alliance"
      responses:
        "201":
          description: Success
          schema:
            $ref: "#/definitions/GeneralObjectResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /updateAllianceState/{id}:
    x-swagger-router-controller: alliance
    put:
      tags:
        - "update Alliance"
      description: Update state of alliance
      operationId: updateStateAlliance
      parameters:
        - name: id 
          description: alliance id 
          type: string
          in: path
          required: true
        - in: header
          name: token
          description: alliance token
          type: string
          required: true
        - in: body 
          name: state
          schema:
            $ref: "#/definitions/State"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralObjectResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /users:
    x-swagger-router-controller: user
    get:
      description: get the users list
      operationId: getUsers
      tags:
        - "get users"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UserListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: add a new user to the list
      operationId: postUser
      tags:
        - "post users"
      parameters:
        - in: body
          name: user
          description: The user to create.
          schema:
            $ref: "#/definitions/User"
      responses:
        "201":
          description: Success
          schema:
            $ref: "#/definitions/GeneralObjectResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"  
  /users/{id}:
    x-swagger-router-controller: user
    get:
      description: get a user
      operationId: getUser
      parameters: 
      - name: id
        type: number
        in: path
        required: true
      responses:
        "200":
          description: Success
          schema: 
           $ref: "#/definitions/GeneralObjectResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: update a user
      operationId: updateUser
      # define the parameters
      tags:
        - "update User"
      parameters:
        - name: id
          description: user id
          type: number
          in: path
          required: true
        - in: header
          name: token
          description: event token
          type: string
          required: true
        - in: body
          name: user
          description: The user to update.
          schema:
            $ref: "#/definitions/User"
      responses:
        "201":
          description: Success
          schema:
            $ref: "#/definitions/GeneralObjectResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"  
    delete:
      description: delete a user
      # define the parameters
      parameters:
        - name: id
          description: user id
          type: number
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralDeleteResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /complaints:
    x-swagger-router-controller: complaint
    get:
      description: get the complaints list
      operationId: getComplaints
      tags:
        - "get complaints"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ComplaintListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: add a new complaint to the list
      operationId: postComplaint
      tags:
        - "post complaint"
      parameters:
        - in: body
          name: complaint
          description: The complaint to create.
          schema:
            $ref: "#/definitions/Complaint"
      responses:
        "201":
          description: Success
          schema:
            $ref: "#/definitions/GeneralObjectResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"  
  /complaints/{id}:
    x-swagger-router-controller: complaint
    get:
      description: get a complaint
      operationId: getComplaint
      parameters: 
      - name: id
        type: number
        in: path
        required: true
      responses:
        "200":
          description: Success
          schema: 
           $ref: "#/definitions/GeneralObjectResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: update a complaint
      operationId: updateComplaint
      # define the parameters
      tags:
        - "update Complaint"
      parameters:
        - name: id
          description: complaint id
          type: number
          in: path
          required: true
        - in: header
          name: token
          description: event token
          type: string
          required: true
        - in: body
          name: complaint
          description: The complaint to update.
          schema:
            $ref: "#/definitions/User"
      responses:
        "201":
          description: Success
          schema:
            $ref: "#/definitions/GeneralObjectResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"  
    delete:
      description: delete a complaint
      # define the parameters
      parameters:
        - name: id
          description: complaint id
          type: number
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralDeleteResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /highlights:
    x-swagger-router-controller: highlight
    get:
      description: get the highlights list
      operationId: getHighlights
      tags:
        - "get highlights"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/HighlightListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: add a new highlight to the list
      operationId: postHighlight
      tags:
        - "post highlights"
      parameters:
        - in: header
          name: token
          description: highlight token
          type: string
          required: true
        - in: body
          name: highlight
          description: The highlight to create.
          schema:
            $ref: "#/definitions/Highlight"
      responses:
        "201":
          description: Success
          schema:
            $ref: "#/definitions/GeneralObjectResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /highlights/{id}:
    x-swagger-router-controller: highlight
    delete:
      description: delete a highlight
      operationId: deleteHighlight
      tags:
        - "delete highlights"
      # define the parameters
      parameters:
        - name: id
          description: highlight id
          type: number
          in: path
          required: true
        - in: header
          name: token
          description: event token
          type: string
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralDeleteResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
  
# complex objects have schema definitions
definitions:
  LoginObjectResponse:
    type: object
  GeneralDeleteResponse:
    type: object
    properties:
      success:
        type: number
        description: returns 1 if successful
      description:
        type: string
        description: a short comment
    required:
      - success
      - description
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
  loginForm:
    properties:
      email:
        type: string
      password:
        type: string
  LoginResponse:
    required:
      - token
    properties:
      token:
        type: string
  State:
    type: object
    properties:
      state:
        type: boolean
  Event:
    type: object
    properties:
      title:
        type: string
        description: Title of the event
      description:
        type: string
        description: Description of the event
      place:
        type: string
        description: Place of the event
      address:
        type: string
        description: Address of the event
      start_date:
        type: string
        description: Start date of the event
      finish_date:
        type: string
        description: End date of the event
      start_time:
        type: string
        description: Start time of the event
      finish_time:
        type: string
        description: End time of the event
      state:
        type: boolean
        description: indicates if the event is 'noted' or no
      image:
        type: string
        format: byte
      latitude:
        type: number
        description: event's latitude
      longitude:
        type: number
        description: event's longitude
    required:
      - title
      - description
      - address
      - start_date
      - finish_date
      - start_time
      - finish_time
      - state
      - image
  GeneralObjectResponse:
    type: object
    properties:
      id:
        type: number
        description: identifier
    required:
      - id
  EventListResponse:
    required:
      - events
    properties:
      events:
        type: array
        items:
          $ref: "#/definitions/GeneralObjectResponse"
  News:
    type: object
    properties:
      title:
        type: string
        description: Title of the news
      description:
        type: string
        description: Description of the news
      date:
        type: string
        description: Date of news publication
      source:
        type: string
        description: Source of the news
      state:
        type: boolean
        description: State of the event (published, not published)
      image_owner:
        type: string
        description: Image owner of the event
      source_link:
        type: string
        description: Source link of the news
      image:
        type: string
        format: byte
    required:
      - title
      - description
      - date
      - source
      - state
      - image_owner
      - source_link
      - image     
  NewsListResponse:
    required:
      - news
    properties:
      news:
        type: array
        items:
          $ref: "#/definitions/GeneralObjectResponse"
  Organization:
    type: object
    properties:
      name:
        type: string
        description: Name of the organization
      description:
        type: string
        description: Description of the organization
      website:
        type: string
        description: Website of the organization
      address:
        type: string
        description: Address of the organization
      email:
        type: string
        description: Email of the organization
      phone:
        type: string
        description: Phone of the organization
      state:
        type: boolean
        description: indicates if the organization is 'noted' or no
      image:
        type: string
        format: byte
    required:
      - name
      - description 
      - state
      - image
      - email
      - phone
  OrganizationsListResponse:
    required:
      - organizations
    properties:
      organizations:
        type: array
        items:
          $ref: "#/definitions/GeneralObjectResponse"
  Alliance:
    type: object
    properties:
      name:
        type: string
        description: Name of the alliance
      description:
        type: string
        description: Description of the alliance
      offer:
        type: string
        description: Offer terms and conditions
      website:
        type: string
        description: Website of the alliance
      email:
        type: string
        description: Email of the alliance
      phone:
        type: string
        description: Phone of the alliance
      state:
        type: boolean
        description: indicates if the alliance is 'noted' or no
      finish_date:
        type: string
        description: Closing date of the offer
      image:
        type: string
        format: byte
    required:
      - name
      - description
      - offer
      - finish_date
      - email
      - state
      - image
  AlliancesListResponse:
    required:
      - alliances
    properties:
      alliances:
        type: array
        items:
          $ref: "#/definitions/GeneralObjectResponse"
  Complaint:
    type: object
    properties:
      first_name:
        type: string
        description: First name of the complainant
      last_name:
        type: string
        description: Last name of the complainant
      document_type:
        type: string
        description: Type of document
      document_number:
        type: string
        description: Document number
      email:
        type: string
        description: complainant's mail
      phone:
        type: string
        description: complainant's phone
      event_day:
        type: string
        description: Date on which the event occurred
      event_place:
        type: string
        description: Place where the event occurred
      description:
        type: string
        description: Description of the situation of vulnerability
    required:
      - first_name
      - last_name
      - document_type
      - document_number
      - email
      - phone
      - event_day
      - event_place
      - description
  ComplaintListResponse:
    required:
      - complaints
    properties:
      complaints:
        type: array
        items:
          $ref: "#/definitions/GeneralObjectResponse"
  User:
    type: object
    properties:
      document_type:
        type: string
        description: Type of user document
      document_number:
        type: string
        description: User's document number
      first_name:
        type: string
        description: User's first name
      last_name:
        type: string
        description: User's last name
      address:
        type: string
        description: User's Address 
      email:
        type: string
        description: User's email
      phone:
        type: string
        description: User's phone
      sex_birth:
        type: string
        description: User's birth sex
      sexual_orientation:
        type: string
        description: Sexual orientation of the user
      gender:
        type: string
        description: Gender of the user
      birth_day:
        type: string
        description: User's birth day      
      education:
        type: string
        description: User's education
    required:
      - document_type
      - document_number
      - first_name
      - last_name
      - address
      - email
      - phone
      - sex_birth
      - sexual_orientation
      - gender
      - birth_day
      - education
  UserListResponse:
    required:
      - users
    properties:
      users:
        type: array
        items:
          $ref: "#/definitions/GeneralObjectResponse"
  Highlight:
    type: object
    properties:
      section_id:
        type: number
        description: Id of the highligh in the respective section
      section:
        type: string
        description: Section in which the highlight is      
    required:
      - section_id
      - section      
  HighlightListResponse:
    required:
      - highlights
    properties:
      highlights:
        type: array
        items:
          $ref: "#/definitions/GeneralObjectResponse"        

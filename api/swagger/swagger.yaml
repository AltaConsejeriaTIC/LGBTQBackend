swagger: "2.0"
info:
  version: "0.0.1"
  title: Hello World App
# during dev, should point to your local machine
host: localhost:8080
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /login:
    # binds a127 app logic to a route
    x-swagger-router-controller: login
    post:
      tags:
        - "Login"
      description: Allows the user to log in
      # used as the method name of the controller
      operationId: login
      parameters:
        - in: body
          name: loginForm
          description: login form
          required: true
          schema: 
            $ref: "#/definitions/loginForm"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GeneralObjectResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /events:
    x-swagger-router-controller: event
    get:
      description: get the events list
      operationId: getEvents
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/EventListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: add a new event to the list
      operationId: postEvent
      parameters:
        - in: body
          name: event
          description: The event to create.
          schema:
            $ref: "#/definitions/Event"
      responses:
        "201":
          description: Success
          schema:
            $ref: "#/definitions/EventResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /events/{id}:
    x-swagger-router-controller: event
    get:
      description: get a event
      operationId: getEvent
      parameters: 
      - name: id
        type: number
        in: path
        required: true
      responses:
        "200":
          description: Success
          schema: 
           $ref: "#/definitions/EventResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: update a event
      # define the parameters
      parameters:
        - name: id
          description: event id
          type: number
          in: path
          required: true
        - in: body
          name: event
          description: The event to update.
          schema:
            $ref: "#/definitions/Event"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/EventResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"  
    delete:
      description: delete a event
      # define the parameters
      parameters:
        - name: id
          description: event id
          type: number
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralDeleteResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /news:
    x-swagger-router-controller: news
    get:
      description: get the news list
      operationId: getNewss
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/NewsListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: add a news to the list
      parameters:
        - in: body
          name: news
          description: News to create.
          schema:
            $ref: "#/definitions/News"
      responses:
        "201":
          description: Success
          schema:
            $ref: "#/definitions/NewsResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /news/{id}:
    x-swagger-router-controller: news
    get:
      description: get a news
      parameters: 
      - name: id
        type: number
        in: path
        required: true
      responses:
        "200":
          description: Success
          schema: 
           $ref: "#/definitions/NewsResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: update a news
      # define the parameters
      parameters:
        - name: id
          description: news id
          type: number
          in: path
          required: true
        - in: body
          name: news
          description: The news to update.
          schema:
            $ref: "#/definitions/News"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/NewsResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"  
    delete:
      description: delete a news
      # define the parameters
      parameters:
        - name: id
          description: news id
          type: number
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralDeleteResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"          
  /swagger:
    x-swagger-pipe: swagger_raw
  
# complex objects have schema definitions
definitions:
  GeneralObjectResponse:
    type: object
  GeneralDeleteResponse:
    type: object
    properties:
      success:
        type: number
        description: returns 1 if successful
      description:
        type: string
        description: a short comment
    required:
      - success
      - description
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
  loginForm:
    properties:
      email:
        type: string
      password:
        type: string
  LoginResponse:
    required:
      - token
    properties:
      token:
        type: string
  Event:
    type: object
    properties:
      title:
        type: string
        description: Title of the event
      description:
        type: string
        description: Description of the event
      place:
        type: string
        description: Place of the event
      address:
        type: string
        description: Address of the event
      start_date:
        type: string
        description: Start date of the event
      finish_date:
        type: string
        description: End date of the event
      start_time:
        type: string
        description: Start time of the event
      finish_time:
        type: string
        description: End time of the event
      state:
        type: boolean
        description: indicates if the event is 'noted' or no
      image:
        type: string
        format: byte
    required:
      - title
      - description
      - address
      - start_date
      - finish_date
      - start_time
      - finish_time
      - state
      - image     
  EventResponse:
    type: object
    properties:
      id:
        type: number
        description: identifier
      title:
        type: string
        description: Title of the event
      description:
        type: string
        description: Description of the event
      place:
        type: string
        description: Place of the event
      address:
        type: string
        description: Address of the event
      start_date:
        type: string
        description: Start date of the event
      finish_date:
        type: string
        description: End date of the event
      start_time:
        type: string
        description: Start time of the event
      finish_time:
        type: string
        description: End time of the event
      state:
        type: boolean
        description: indicates if the event is 'noted' or no
      image:
        type: string
        format: byte
    required:
      - id
      - title
      - description
      - address
      - start_date
      - finish_date
      - start_time
      - finish_time
      - state
      - image
  EventListResponse:
    required:
      - events
    properties:
      events:
        type: array
        items:
          $ref: "#/definitions/EventResponse"
  News:
    type: object
    properties:
      title:
        type: string
        description: Title of the news
      description:
        type: string
        description: Description of the news
      date:
        type: string
        description: Date of news publication
      source:
        type: string
        description: Source of the news
      state:
        type: string
        description: State of the event (published, not published)
      image_owner:
        type: string
        description: Image owner of the event
      source_link:
        type: string
        description: Source link of the news
      state:
        type: boolean
        description: indicates if the new is 'noted' or no
      image:
        type: string
        format: byte
    required:
      - title
      - description
      - date
      - source
      - state
      - image_owner
      - source_link
      - state
      - image     
  NewsResponse:
    type: object
    properties:
      id:
        type: number
        description: identifier
      title:
        type: string
        description: Title of the event
      description:
        type: string
        description: Description of the event
      place:
        type: string
        description: Place of the event
      address:
        type: string
        description: Address of the event
      start_date:
        type: string
        description: Start date of the event
      finish_date:
        type: string
        description: End date of the event
      start_time:
        type: string
        description: Start time of the event
      finish_time:
        type: string
        description: End time of the
      state:
        type: boolean
        description: indicates if the event is 'noted' or no
      image:
        type: string
        format: byte
    required:
      - id
      - title
      - description
      - address
      - start_date
      - finish_date
      - start_time
      - finish_time
      - state
      - image
  NewsListResponse:
    required:
      - news
    properties:
      news:
        type: array
        items:
          $ref: "#/definitions/NewsResponse"        